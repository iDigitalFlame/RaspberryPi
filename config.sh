#!/bin/bash
# Automatically generated build files script.
# Args: build-config.py ./Config config.sh

mkdir -p "${SETUP_DIRECTORY}/bin" 2> /dev/null
mkdir -p "${SETUP_DIRECTORY}/etc/pacman.d/hooks" 2> /dev/null
mkdir -p "${SETUP_DIRECTORY}/etc/profile.d" 2> /dev/null
mkdir -p "${SETUP_DIRECTORY}/etc/security/limits.d" 2> /dev/null
mkdir -p "${SETUP_DIRECTORY}/etc/ssh" 2> /dev/null
mkdir -p "${SETUP_DIRECTORY}/etc/syscheck.d" 2> /dev/null
mkdir -p "${SETUP_DIRECTORY}/etc/sysctl.d" 2> /dev/null
mkdir -p "${SETUP_DIRECTORY}/etc/systemd/network" 2> /dev/null
mkdir -p "${SETUP_DIRECTORY}/etc/systemd/system/archlinux-keyring-wkd-sync.service.d" 2> /dev/null
mkdir -p "${SETUP_DIRECTORY}/etc/systemd/system/ldconfig.service.d" 2> /dev/null
mkdir -p "${SETUP_DIRECTORY}/etc/systemd" 2> /dev/null
mkdir -p "${SETUP_DIRECTORY}/etc" 2> /dev/null

# Create file "/bin/setup_fixup"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf '#!/usr/bin/bash\n\nif ! [ "$UID" = "0" ]; then\n    echo "Error: root is require' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf 'd!"\n    exit 1\nfi\n\nif [ $# -ne 1 ]; then\n    echo "setup_fixup <sysconfig d' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf 'ir>"\n    exit 2\nfi\nif [ ! -d "$1" ]; then\n    printf '\''Error: path "%%s" i' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf 's not valid!\\n'\'' "$1"\n    exit 1\nfi\n\nfixup_packages() {\n    if [ $# -ne ' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf '1 ]; then\n        return\n    fi\n    if [ ! -f "$1" ]; then\n        return\n ' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf '   fi\n    packages=()\n    while read i; do\n        if ! pacman -Qi "$i" 1> /d' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf 'ev/null 2> /dev/null; then\n            packages+=($i)\n        fi\n    done < "' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf '$1"\n    if [ ${#packages[@]} -gt 0 ]; then\n        printf "Installing %%s pack' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf 'ages..\\n" "${#packages[@]}"\n        printf "Package: %%s\\n" "${packages[@]}"\n' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf '        pacman -Sy --noconfirm ${packages[@]}\n    fi\n}\nfixup_systemctl() {\n ' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf '   if [ $# -ne 2 ]; then\n        return\n    fi\n    if [ ! -f "$2" ]; then\n  ' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf '      return\n    fi\n    while read i; do\n        systemctl $1 $i 2> /dev/null' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf '\n    done < "$2"\n}\n\nfixup_packages "${1}/packages.md"\nfixup_systemctl mask ' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf '"${1}/masked.md"\nfixup_systemctl enable "${1}/units.md"\nfixup_systemctl enable' >> "${SETUP_DIRECTORY}/bin/setup_fixup"
/usr/bin/printf ' "${1}/indirect.md"\n' >> "${SETUP_DIRECTORY}/bin/setup_fixup"

# Create file "/bin/relink"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '#!/usr/bin/bash\n\nDRY=0\nDEBUG=0\n\nif [ $# -lt 2 ]; then\n    echo "relink [--' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf 'debug] [--dry] <config source> <config target>"\n    exit 1\nfi\n\nlist() {\n   ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf ' if [ $# -ne 2 ]; then\n        return 1\n    fi\n    list_src=${2%%/}\n    list' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '_target=${1%%/}\n    find "$list_target" -type f -not -wholename "$list_target"/' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '.git/\\* -print | while IFS= read -r list_file; do\n        list_name=$(printf "' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '%%s" "$list_file" | awk "{gsub(\\"${list_target}\\", \\"\\"); print \\$0}")\n   ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '     if ! echo "$list_name" | grep -qE '\''.(nlk|nolink)$|^/.git(|ignore$|config' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '$)|^/(LICENSE|license|.vscode)$|^/[a-zA-Z0-9_.-]+.(md|vscode|MD|code-workspace)$' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf ''\''; then\n            check "${list_src}${list_name}" "${list_target}${list_na' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf 'me}"\n        fi\n    done\n    return 0\n}\nlink() {\n    if [ $# -ne 2 ]; then' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '\n        return 1\n    fi\n    rm -f "$1" 2> /dev/null\n    link_target="$(dirn' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf 'ame "$1")"\n    if ! [ -d "$target" ]; then\n        if [ $DRY -eq 0 ]; then\n  ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '          printf '\''Making "%%s"..\\n'\'' "$link_target"\n            if ! mkdi' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf 'r -p "$link_target" 2> /dev/null; then\n                printf '\''Cannot create' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf ' directory "%%s"!\\n'\'' "$link_target"\n                exit 1\n            fi\n' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '            if [ "$UID" = "0" ]; then\n                chmod 0555 "$link_target"' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '\n            else\n                chmod 0755 "$link_target"\n            fi\n ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '       else\n            printf '\''Would make "%%s"..\\n'\'' "$link_target"\n  ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '      fi\n    fi\n    if [ $DRY -ne 0 ]; then\n        printf '\''Would link "%%' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf 's" to "%%s"!\\n'\'' "$1" "$2"\n        return 0\n    fi\n    if ! ln -s "$2" "$1' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '"; then\n        printf '\''Could not link "%%s" to "%%s"!\\n'\'' "$1" "$2"\n   ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '     exit 1\n    fi\n    printf '\''Relinked "%%s" to "%%s".\\n'\'' "$1" "$2"\n ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '   return 0\n}\ncheck() {\n    if [ $# -ne 2 ]; then\n        return 1\n    fi\n' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '    if [ $DEBUG -eq 1 ]; then\n        printf '\''Checking "%%s"..\\n'\'' "$1"\n' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '    fi\n    if ! [ -L "$1" ]; then\n        printf '\''File "%%s" is invalid, up' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf 'dating!\\n'\'' "$1"\n        link "$1" "$2"\n    else\n        if ! [ "$(readlin' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf 'k "$1")" = "$2" ]; then\n            printf '\''File "%%s" is invalid, updating!' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '\\n'\'' "$1"\n            link "$1" "$2"\n        else\n            if [ $DEBUG ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '-eq 1 ]; then\n                printf '\''File "%%s" is valid!\\n'\'' "$1"\n    ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '        fi\n        fi\n    fi\n    return 0\n}\npanic() {\n    echo "[!] $1"\n ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '   exit 1\n}\n\nif [ $# -gt 2 ]; then\n    case "$1" in\n        "--dry")\n     ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '   DRY=1\n        shift\n        ;;\n        "--debug")\n        DEBUG=1\n      ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '  shift\n        ;;\n        *)\n        ;;\n    esac\n    case "$1" in\n       ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf ' "--dry")\n        DRY=1\n        shift\n        ;;\n        "--debug")\n       ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf ' DEBUG=1\n        shift\n        ;;\n        *)\n        ;;\n    esac\nfi\n\nif ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '[ $DRY -eq 0 ]; then\n    if ! [ -d "$1" ]; then\n        printf '\''Error: sour' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf 'ce directory "%%s" does not exist!'\'' "$1"\n    fi\n    if ! [ -d "$2" ]; then\n' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf '        if ! mkdir -p "$2" 2> /dev/null; then\n            printf '\''Error: can' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf 'not create target directory "%%s"!'\'' "$2"\n            exit 1\n        fi\n   ' >> "${SETUP_DIRECTORY}/bin/relink"
/usr/bin/printf ' fi\nfi\n\nlist "$1" "$2"\n' >> "${SETUP_DIRECTORY}/bin/relink"

# Create file "/bin/syslink"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '#!/usr/bin/bash\n\nsource "/etc/sysconfig.conf" 2> /dev/null\nif [ -z "$SYSCONFI' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'G" ]; then\n    echo "Error: system configuration directory not found!"\n    exi' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 't 1\nfi\nif ! [ -d "$SYSCONFIG" ]; then\n    printf '\''Error: system configurat' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'ion directory "%%s" does not exist!\\n'\'' "$SYSCONFIG"\n    exit 1\nfi\n\nSYSCO' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'NFIG=${SYSCONFIG%%/}\n\nif ! [ "$UID" = "0" ]; then\n    echo "Error: root is re' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'quired!"\n    exit 1\nfi\n\nrelink "$SYSCONFIG" /\n\npacman -Qeq 1> "${SYSCONFIG' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '}/packages.md"\ncp "/etc/fstab" "${SYSCONFIG}/etc/fstab.nlk"\nsystemctl list-uni' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 't-files | grep "masked" | awk '\''{print $1}'\'' | sort 1> "${SYSCONFIG}/masked.' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'md"\nsystemctl list-unit-files | awk '\''{print $1" "$2}'\'' | grep "enabled" | ' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'grep -vE ".target|enabled-runtime" | awk '\''{print $1}'\'' | sort 1> "${SYSCONF' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'IG}/units.md"\nsystemctl list-units | grep "@." | grep -vE "dead|exited" | awk '\''' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '{print $1}'\'' | grep -vE "getty|user|blockdev" | grep "@." | sort 1> "${SYSCONF' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'IG}/indirect.md"\n\nchown -R root:root "$SYSCONFIG"\nchmod -R 0555 "$SYSCONFIG"\n' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '\nfind "$SYSCONFIG" -type f -exec chmod 0444 {} \\;\nfind "$SYSCONFIG" -type d -' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'exec chmod 0555 {} \\;\n\nchmod -R 0555 "${SYSCONFIG}/bin"\nchmod -R 0555 "${SYS' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'CONFIG}/etc/profile.d"\nchmod -R 0500 "${SYSCONFIG}/etc/syscheck.d"\n\nchmod 055' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '5 "${SYSCONFIG}/etc/ssh"\nchmod 0555 "${SYSCONFIG}/etc/systemd"\nchmod 0500 "${S' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'YSCONFIG}/etc/sysctl.d"\nchmod 0555 "${SYSCONFIG}/etc/security" 2> /dev/null\nch' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'mod 0440 "${SYSCONFIG}/etc/ssh/sshd_config"\nchmod 0400 "${SYSCONFIG}/etc/mkinit' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'cpio.conf" 2> /dev/null\nchmod 0500 "${SYSCONFIG}/etc/security/limits.d" 2> /dev' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '/null\nchmod 0400 "${SYSCONFIG}/etc/systemd/coredump.conf" 2> /dev/null\n\nchmod' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf ' 0400 "${SYSCONFIG}"/etc/sysctl.d/*\nchmod 0444 "${SYSCONFIG}"/etc/systemd/netwo' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'rk/* 2> /dev/null\nchmod 0400 "${SYSCONFIG}"/etc/security/limits.d/* 2> /dev/nul' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'l\n\nchmod -R 0555 "/etc/profile.d"\nchmod -R 0500 "/etc/syscheck.d"\n\nchmod 05' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '55 "/etc/ssh"\nchmod 0555 "/etc/systemd"\nchmod 0500 "/etc/sysctl.d"\nchmod 0555' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf ' "/etc/security"\nchmod 0444 "/etc/resolv.conf"\nchmod 0500 "/etc/pacman.d/hooks' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '" 2> /dev/null\nchmod 0500 "/etc/security/limits.d" 2> /dev/null\n\nchmod 0400 /' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'etc/sysctl.d/*\nchmod 0444 /etc/systemd/network/* 2> /dev/null\nchmod 0400 /etc/' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'security/limits.d/* 2> /dev/null\n\nchown -R root:root "/etc/ssh"\nchown -R root' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf ':root "/etc/systemd"\nchown -R root:root "/etc/sysctl.d"\nchown -R root:root "/e' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'tc/security"\nchown -R root:root "/etc/profile.d"\nchown -R root:root "/etc/sysc' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'heck.d"\nchown -R root:root "/etc/resolv.conf"\n\nfind "/etc/ssh" -type f -exec ' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'chmod 0400 {} \\;\nfind "/etc/systemd" -type f -exec chmod 0444 {} \\;\nfind "/e' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'tc/security" -type f -exec chmod 0440 {} \\;\n\nif [ -e "/etc/pacman.conf" ]; th' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'en\n    chmod 0444 "${SYSCONFIG}/etc/pacman.conf"\n    chmod 0500 "${SYSCONFIG}/' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'etc/pacman.d/hooks"\n    chmod 0400 "${SYSCONFIG}"/etc/pacman.d/hooks/*\n    chm' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'od 0555 "/etc/pacman.d"\n    chmod 0400 /etc/pacman.d/hooks/*\n    chown -R root' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf ':root "/etc/pacman.d"\n    find "/etc/pacman.d" -maxdepth 1 -type f -exec chmod ' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '0444 {} \\;\nfi\nif [ -e "${SYSCONFIG}/etc/udev" ]; then\n    chown -R root:root' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf ' "/etc/udev"\n    chmod -R 0555 "${SYSCONFIG}/etc/udev"\n    find "/etc/udev/" -' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'xdev -type f -exec chmod 0444 {} \\;\nfi\nif [ -e "${SYSCONFIG}/etc/tmpfiles.d" ' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf ']; then\n    chown -R root:root "/etc/tmpfiles.d"\n    chmod 0550 "${SYSCONFIG}/' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'etc/tmpfiles.d"\n    chmod 0440 "${SYSCONFIG}"/etc/tmpfiles.d/*\n    chmod 0550 ' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '"/etc/tmpfiles.d"\n    chmod 0440 /etc/tmpfiles.d/*\nfi\nif [ -e "${SYSCONFIG}/e' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'tc/modprobe.d" ]; then\n    chown -R root:root "/etc/modprobe.d"\n    chmod 0500' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf ' "${SYSCONFIG}/etc/modprobe.d"\n    chmod 0400 "${SYSCONFIG}"/etc/modprobe.d/*\n' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '    chmod 0500 "/etc/modprobe.d"\nfi\nif [ -e "${SYSCONFIG}/etc/sysupdate.d" ]; ' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'then\n    chown -R root:root "/etc/sysupdate.d"\n    chmod 0550 "${SYSCONFIG}/et' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'c/sysupdate.d"\n    chmod 0550 "${SYSCONFIG}"/etc/sysupdate.d/*\n    chmod 0550 ' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '"/etc/sysupdate.d"\nfi\nif [ -e "${SYSCONFIG}/etc/nftables.conf" ]; then\n    ch' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'mod 0400 "${SYSCONFIG}/etc/nftables.conf"\nfi\n\nif [ -d "/etc/syscheck.d" ]; th' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'en\n    for entry in /etc/syscheck.d/*.sh; do\n        if [ -f "$entry" ]; then\n' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf '            printf '\''Processing script "%%s"..\\n'\'' "$entry"\n            so' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf 'urce "$entry"\n        fi\n    done\nfi\n\necho "Broken Links Found:"\nfind /etc' >> "${SETUP_DIRECTORY}/bin/syslink"
/usr/bin/printf ' -xtype l -xdev 2> /dev/null | grep -vE "/proc|/tmp|/run"\necho "Done!"\n' >> "${SETUP_DIRECTORY}/bin/syslink"

# Create file "/bin/sysupdate"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf '#!/usr/bin/bash\n\nif ! [ "$UID" = "0" ]; then\n    echo "Error: root is require' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf 'd!"\n    exit 1\nfi\n\nsource "/etc/sysconfig.conf" 2> /dev/null\nif [ -z "$SYSC' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf 'ONFIG" ]; then\n    echo "Error: system configuration directory not found!"\n   ' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf ' exit 1\nfi\nif ! [ -d "$SYSCONFIG" ]; then\n    printf '\''Error: system config' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf 'uration directory "%%s" does not exist!\\n'\'' "$SYSCONFIG"\n    exit 1\nfi\n\n[' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf ' ${SYSCONFIG_SECURE:-0} -eq 1 ] && mount -o rw,remount /\n[ -e "/etc/profile.d/p' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf 'roxy.sh" ] && source "/etc/profile.d/proxy.sh"\n\nif [ "$1" == "--auto" ]; then\n' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf '    if [ "$2" == "--download" ]; then\n        pacman -Syuw --noconfirm\n       ' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf ' exit 0\n    fi\n    env SYSUPDATE=1 pacman -Syu --noconfirm\nelse\n    env SYSU' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf 'PDATE=1 pacman -Syu\nfi\n\n[ ${SYSCONFIG_SECURE:-0} -eq 1 ] && mount -o rw,remou' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf 'nt /\n[ -e "/etc/sysupdate.d/prelink.sh" ] && source "/etc/sysupdate.d/prelink.s' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf 'h"\n\nsyslink\n\n[ -e "/etc/sysupdate.d/postlink.sh" ] && source "/etc/sysupdate' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf '.d/postlink.sh"\nif [ ${SYSCONFIG_SECURE:-0} -eq 1 ]; then\n    mount -o ro,remo' >> "${SETUP_DIRECTORY}/bin/sysupdate"
/usr/bin/printf 'unt / 2> /dev/null || mount -Ro ro,remount /\nfi\n' >> "${SETUP_DIRECTORY}/bin/sysupdate"

# Create file "/bin/linkcheck"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/bin/linkcheck"
/usr/bin/printf '#!/usr/bin/bash\n\nset -u\n\nif [ $# -ne 2 ]; then\n    echo "linkcheck <link> <' >> "${SETUP_DIRECTORY}/bin/linkcheck"
/usr/bin/printf 'target>"\n    exit 1\nfi\n\n_target="$(readlink "$1" 2> /dev/null)"\nif [ $? -eq' >> "${SETUP_DIRECTORY}/bin/linkcheck"
/usr/bin/printf ' 0 ] && [ "$_target" = "$2" ]; then\n    exit 0\nfi\n\nrm -f "$1" 2> /dev/null\n' >> "${SETUP_DIRECTORY}/bin/linkcheck"
/usr/bin/printf 'if ! ln -sT "$2" "$1"; then\n    printf '\''Creating link "%%s" to "%%s" failed!' >> "${SETUP_DIRECTORY}/bin/linkcheck"
/usr/bin/printf '\\n'\'' "$1" "$2"\n    exit 1\nfi\n\nprintf '\''Link "%%s" to "%%s" created.\\n'\''' >> "${SETUP_DIRECTORY}/bin/linkcheck"
/usr/bin/printf ' "$1" "$2"\n' >> "${SETUP_DIRECTORY}/bin/linkcheck"

# Create file "/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf '[Trigger]\nType        = Path\nTarget      = usr/lib/modules/*/vmlinuz\nTarget  ' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf '    = usr/lib/initcpio/*\nTarget      = usr/lib/firmware/*\nOperation   = Remove' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf '\nOperation   = Install\nOperation   = Upgrade\n\n[Trigger]\nType        = Packa' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf 'ge\nTarget      = linux\nTarget      = linux-*\nTarget      = systemd\nTarget   ' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf '   = mkinitcpio\nTarget      = mkinitcpio-git\nTarget      = mkinitcpio-busybox\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf 'Target      = raspberrypi-firmware\nTarget      = raspberrypi-bootloader\nOperat' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf 'ion   = Remove\nOperation   = Install\nOperation   = Upgrade\n\n[Action]\nWhen  ' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf '      = PreTransaction\nExec        = /usr/bin/mount -o remount,rw /boot\nDescri' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf 'ption = Mounting /boot as read/write..\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-boot.hook"

# Create file "/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf 'on   = Install\nOperation   = Upgrade\n\n[Action]\nWhen        = PreTransaction\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf 'Exec        = /usr/bin/mount -o remount,rw /\nDescription = Mounting / as read/w' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf 'rite..\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/00-root.hook"

# Create file "/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = iptables\nOperation   = Upgrade\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf '\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bin/bash -c "rm /e' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf 'tc/iptables/simple_firewall.rules; rm /etc/iptables/empty.rules"\nDescription = ' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf 'Removing simple rule files..\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/y0-iptables.hook"

# Create file "/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf '[Trigger]\nType        = Path\nTarget      = usr/lib/modules/*/vmlinuz\nTarget  ' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf '    = usr/lib/initcpio/*\nTarget      = usr/lib/firmware/*\nOperation   = Remove' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf '\nOperation   = Install\nOperation   = Upgrade\n\n[Trigger]\nType        = Packa' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf 'ge\nTarget      = linux\nTarget      = linux-*\nTarget      = systemd\nTarget   ' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf '   = mkinitcpio\nTarget      = mkinitcpio-git\nTarget      = mkinitcpio-busybox\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf 'Target      = raspberrypi-firmware\nTarget      = raspberrypi-bootloader\nOperat' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf 'ion   = Remove\nOperation   = Install\nOperation   = Upgrade\n\n[Action]\nWhen  ' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf '      = PostTransaction\nExec        = /usr/bin/mount -ro remount,ro /boot\nDesc' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf 'ription = Mounting /boot as read only..\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-boot.hook"

# Create file "/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf 'on   = Install\nOperation   = Upgrade\n\n[Action]\nWhen        = PostTransaction' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf '\nExec        = /usr/bin/bash -c "mount -ro remount,ro / 2> /dev/null || mount -' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf 'Rro remount,ro /"\nDescription = Mounting / as read only..\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/zz-root.hook"

# Create file "/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf 'on   = Install\nOperation   = Upgrade\n\n[Action]\nWhen        = PostTransaction' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf '\nExec        = /usr/bin/bash -c "[ ${SYSUPDATE:-0} -eq 0 ] && syslink || exit 0' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf '"\nDescription = Fixing permissions for system files..\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/za-fixperms.hook"

# Create file "/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf 'on   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bi' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf 'n/find /etc -xdev -type f -name *.pac* -ls\nDescription = Looking for *.pac* fil' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf 'es..\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/za-findpac.hook"

# Create file "/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf 'on   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bi' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf 'n/bash -c "paccache -rk2; paccache -ruk0"\nDescription = Removing old cached pac' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf 'kages..\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/z1-cache.hook"

# Create file "/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf 'on   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bi' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf 'n/bash -c "pacman -Qtdq || echo '\''No orphans found.'\''"\nDescription = Findin' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf 'g orphan packages..\n' >> "${SETUP_DIRECTORY}/etc/pacman.d/hooks/z0-orphans.hook"

# Create file "/etc/profile.d/alias.sh"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/profile.d/alias.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nexport EDITOR="nano"\n\nalias nano="nano -SLlwxiE --tabsize=4' >> "${SETUP_DIRECTORY}/etc/profile.d/alias.sh"
/usr/bin/printf '"\n' >> "${SETUP_DIRECTORY}/etc/profile.d/alias.sh"

# Create file "/etc/profile.d/history.sh"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/profile.d/history.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nexport HISTSIZE=500\nexport HISTFILESIZE=0\nexport HISTFILE="' >> "${SETUP_DIRECTORY}/etc/profile.d/history.sh"
/usr/bin/printf '/dev/null"\n\nexport LESSKEY="/etc/sysless"\nexport LESSHISTFILE="/dev/null"\n' >> "${SETUP_DIRECTORY}/etc/profile.d/history.sh"

# Create file "/etc/profile.d/umask.sh"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/profile.d/umask.sh"
/usr/bin/printf '#!/usr/bin/bash\n\numask 0027\n' >> "${SETUP_DIRECTORY}/etc/profile.d/umask.sh"

# Create file "/etc/profile.d/z_system_status.sh"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nstatus_repo() {\n    if ! source "/etc/sysconfig.conf" 2> /de' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'v/null; then\n        return 0\n    fi\n    if [ -z "$SYSCONFIG" ]; then\n      ' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '  return 0\n    fi\n    if ! [ -d "$SYSCONFIG" ]; then\n        return 0\n    fi' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '\n    SYSCONFIG=${SYSCONFIG%%/}\n    if ! [ -d "${SYSCONFIG}/.git" ]; then\n    ' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '    return 0\n    fi\n    if bash -c "cd ${SYSCONFIG}; git status | grep -qiE '\''' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'modified|deleted|Untracked'\''"; then\n        printf '\''# Config:\\tSync neede' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'd, use "syspush"\\n'\''\n    else\n        printf "# Config:\\tUp-to-Date\\n"\n ' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '   fi\n}\nstatus_storage() {\n    echo "# Storage:"\n    df -h | grep -v "tmpfs"' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' | grep -E '\''/dev/|/opt/|/mnt/'\'' | sort -r | awk '\''{print ""$1" "$5" ("$3"' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '/"$2")"}'\'' | sort | column -t | awk '\''{print "#     "$0}'\''\n}\nstatus_netw' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'ork() {\n    echo "# Interface Addresses:"\n    for i in $(ip addr | grep "inet"' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' | grep -vE "::1|127.0.0.1|link" | awk '\''{print $2}'\'' | awk -F'\''/'\'' '\''' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '{print $1}'\''); do\n        printf "#     %%s\\n" "$i"\n    done\n}\nstatus_ser' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'vices() {\n    if [ -e "/usr/bin/pacman" ]; then\n        if [ -f "/var/run/upda' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'tes.list" ]; then\n            updates="$(wc -l < "/var/run/updates.list") Pendi' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'ng"\n        else\n            if [ "$UID" = "0" ]; then\n                system' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'ctl start checkupdates.service\n                updates="Checking for updates.."' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '\n            else\n                updates="Updates check pending.."\n         ' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '   fi\n        fi\n        printf "# Updates:\\t%%s\\n" "${updates}"\n    fi\n  ' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '  printf "# Network:\\t%%s Established, " "$(netstat -panut 2> /dev/null | grep ' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '-c "ESTABLISHED")"\n    printf "%%s Listening\\n" "$(netstat -panut 2> /dev/null' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' | grep -c "LISTEN")"\n    printf "# Services:\\t%%s Running, " "$(systemctl --s' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'tate=active --no-legend --no-pager | grep ".service" | grep -c "running")"\n    ' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'printf "%%s Failed, " "$(systemctl --state=failed --no-legend --no-pager | grep ' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '-c ".service")"\n    printf "%%s Timers\\n" "$(systemctl --all --no-legend --no-' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'pager | grep -c ".timer")"\n}\n\nif [[ $- != *i* ]] || [ -n "$SSH_CLIENT" ]; the' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'n\n    printf "##############################################################\\n' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '"\n    status_storage\n    status_network\n    printf "# Uptime:\\t%%s\\n" "$(up' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'time --pretty | sed '\''s/up //g'\'')"\n    printf "# Kernel:\\t%%s\\n" "$(uname' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' -r)"\n    status_repo\n    status_services\n    printf "#######################' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '#######################################\\n"\nfi\n' >> "${SETUP_DIRECTORY}/etc/profile.d/z_system_status.sh"

# Create file "/etc/security/limits.d/limits.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/security/limits.d/limits.conf"
/usr/bin/printf '* hard core 0\n* soft nproc 2500\n* hard nproc 5000\n' >> "${SETUP_DIRECTORY}/etc/security/limits.d/limits.conf"

# Create file "/etc/ssh/ssh_config"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf 'Host *\n    Port                            22\n    MACs                        ' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf '    hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@ope' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf 'nssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com\n    Tunnel           ' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf '               no\n    Ciphers                         chacha20-poly1305@openssh' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf '.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf 'ctr\n    Protocol                        2\n    BatchMode                       ' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf 'no\n    ForwardX11                      no\n    CheckHostIP                     ' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf 'yes\n    IdentityFile                    ~/.ssh/id_rsa\n    IdentityFile        ' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf '            ~/.ssh/id_ed25519\n    ForwardAgent                    no\n    KexAl' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf 'gorithms                   curve25519-sha256@libssh.org,diffie-hellman-group-exc' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf 'hange-sha256\n    VisualHostKey                   yes\n    AddressFamily        ' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf '           any\n    ConnectTimeout                  30\n    HashKnownHosts      ' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf '            yes\n    HostKeyAlgorithms               ssh-ed25519-cert-v01@openss' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf 'h.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa\n    PermitLocalCommand  ' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf '            no\n    GSSAPIAuthentication            no\n    PubkeyAuthentication' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf '            yes\n    StrictHostKeyChecking           ask\n    PasswordAuthentica' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf 'tion          no\n    HostbasedAuthentication         no\n    GSSAPIDelegateCred' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"
/usr/bin/printf 'entials       no\n    ChallengeResponseAuthentication yes\n' >> "${SETUP_DIRECTORY}/etc/ssh/ssh_config"

# Create file "/etc/ssh/sshd_config"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf 'Port                            22\nMACs                            hmac-sha2-51' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf '2-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sh' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf 'a2-512,hmac-sha2-256,umac-128@openssh.com\nUsePAM                          yes\n' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf 'Ciphers                         chacha20-poly1305@openssh.com,aes256-gcm@openssh' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf '.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr\nHostKey           ' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf '              /etc/ssh/ssh_host_rsa_key\nHostKey                         /etc/ss' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf 'h/ssh_host_ed25519_key\nProtocol                        2\nSubsystem            ' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf '           sftp /usr/lib/ssh/sftp-server\nPrintMotd                       no\nPe' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf 'rmitTTY                       yes\nCompression                     no\nMaxStartu' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf 'ps                     10:30:100\nGatewayPorts                    no\nPermitTunn' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf 'el                    no\nPrintLastLog                    yes\nIgnoreRhosts     ' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf '               yes\nTCPKeepAlive                    yes\nAddressFamily          ' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf '         any\nListenAddress                   0.0.0.0\nKexAlgorithms            ' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf '       curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256\nLoginG' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf 'raceTime                  1m\nPermitRootLogin                 yes\nAllowTcpForwa' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf 'rding              no\nAuthorizedKeysFile              .ssh/authorized_keys\nCli' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf 'entAliveCountMax             0\nClientAliveInterval             600\nIgnoreUserK' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf 'nownHosts            no\nPermitEmptyPasswords            no\nAllowAgentForwardin' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf 'g            no\nPubkeyAuthentication            yes\nAuthenticationMethods     ' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf '      publickey\nPasswordAuthentication          yes\nKerberosAuthentication    ' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf '      no\nHostbasedAuthentication         no\nChallengeResponseAuthentication no' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"
/usr/bin/printf '\n' >> "${SETUP_DIRECTORY}/etc/ssh/sshd_config"

# Create file "/etc/syscheck.d/cache.sh"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/syscheck.d/cache.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nrm "/etc/.updated" 2> /dev/null\nrm "/etc/.pwd.lock" 2> /dev/' >> "${SETUP_DIRECTORY}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'null\n\nlinkcheck "/etc/ld.so.cache" "/var/cache/ld.so.cache"\nlinkcheck "/etc/p' >> "${SETUP_DIRECTORY}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'acman.d/gnupg" "/var/db/pacman/gnupg"\nlinkcheck "/etc/pacman.d/mirrorlist" "/va' >> "${SETUP_DIRECTORY}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'r/cache/pacman/mirrorlist"\n\nchmod 0644 "/var/cache/ld.so.cache"\nchown root:ro' >> "${SETUP_DIRECTORY}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'ot "/var/cache/ld.so.cache"\n\nchmod -R 0750 "/var/cache/pacman/pkg"\nchmod 0640' >> "${SETUP_DIRECTORY}/etc/syscheck.d/cache.sh"
/usr/bin/printf ' /var/cache/pacman/pkg/*\nchown -R root:root "/var/cache/pacman/pkg"\n\nchmod 07' >> "${SETUP_DIRECTORY}/etc/syscheck.d/cache.sh"
/usr/bin/printf '55 "/var/lib/pacman/sync"\nchmod 0644 /var/lib/pacman/sync/*\nchown -R root:root' >> "${SETUP_DIRECTORY}/etc/syscheck.d/cache.sh"
/usr/bin/printf ' "/var/lib/pacman/sync"\n\nchmod -R 0755 "/var/lib/pacman/local"\nchown -R root:' >> "${SETUP_DIRECTORY}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'root "/var/lib/pacman/local"\nfind "/var/lib/pacman" -type f -exec chmod 0644 {}' >> "${SETUP_DIRECTORY}/etc/syscheck.d/cache.sh"
/usr/bin/printf ' \\;\n\nchmod 0700 "/var/cache/ldconfig"\nchown -R root:root "/var/cache/ldconfi' >> "${SETUP_DIRECTORY}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'g"\n' >> "${SETUP_DIRECTORY}/etc/syscheck.d/cache.sh"

# Create file "/etc/syscheck.d/lesskey.sh"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/syscheck.d/lesskey.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nlinkcheck "/etc/syslesskey" "/etc/sysless"\nlinkcheck "/usr/l' >> "${SETUP_DIRECTORY}/etc/syscheck.d/lesskey.sh"
/usr/bin/printf 'ocal/etc/syslesskey" "/etc/sysless"\n\nchmod 0444 "/etc/sysless"\nchmod 0444 "/e' >> "${SETUP_DIRECTORY}/etc/syscheck.d/lesskey.sh"
/usr/bin/printf 'tc/syslesskey"\nchmod 0444 "/usr/local/etc/syslesskey"\n' >> "${SETUP_DIRECTORY}/etc/syscheck.d/lesskey.sh"

# Create file "/etc/sysctl.d/ipv6.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/sysctl.d/ipv6.conf"
/usr/bin/printf 'net.ipv6.conf.all.use_tempaddr      = 2\nnet.ipv6.conf.default.use_tempaddr  = 2' >> "${SETUP_DIRECTORY}/etc/sysctl.d/ipv6.conf"
/usr/bin/printf '\n' >> "${SETUP_DIRECTORY}/etc/sysctl.d/ipv6.conf"

# Create file "/etc/sysctl.d/kernel.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'fs.file-max                     = 372925\nvm.swappiness                   = 10\n' >> "${SETUP_DIRECTORY}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'fs.suid_dumpable                = 0\nfs.protected_fifos              = 1\nfs.pro' >> "${SETUP_DIRECTORY}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'tected_regular            = 1\nkernel.kptr_restrict            = 2\nkernel.dmesg' >> "${SETUP_DIRECTORY}/etc/sysctl.d/kernel.conf"
/usr/bin/printf '_restrict           = 1\nfs.protected_symlinks           = 1\nfs.protected_hardl' >> "${SETUP_DIRECTORY}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'inks          = 1\nkernel.yama.ptrace_scope        = 3\nkernel.kexec_load_disabl' >> "${SETUP_DIRECTORY}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'ed      = 1\nfs.inotify.max_user_watches     = 16777215\nfs.inotify.max_queued_e' >> "${SETUP_DIRECTORY}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'vents    = 32767\nvm.dirty_writeback_centisecs    = 1500\nfs.inotify.max_user_in' >> "${SETUP_DIRECTORY}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'stances   = 4096\n' >> "${SETUP_DIRECTORY}/etc/sysctl.d/kernel.conf"

# Create file "/etc/sysctl.d/network.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf 'net.core.rmem_max                           = 16777216\nnet.ipv4.tcp_rmem       ' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '                    = 4096 1048576 2097152\nnet.ipv4.tcp_wmem                   ' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '        = 4096 65536 16777216\nnet.core.wmem_max                           = 167' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '77216\nnet.core.somaxconn                          = 32768\nnet.core.optmem_max ' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '                        = 65536\nnet.ipv4.tcp_rfc1337                        = 1' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '\nnet.ipv4.udp_rmem_min                       = 8192\nnet.ipv4.udp_wmem_min     ' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '                  = 8192\nnet.core.rmem_default                       = 1048576\n' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf 'net.core.wmem_default                       = 1048576\nnet.ipv4.tcp_fastopen    ' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '                   = 1\nnet.ipv4.tcp_tw_reuse                       = 1\nnet.cor' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf 'e.netdev_budget                      = 50000\nnet.ipv4.tcp_timestamps           ' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '          = 1\nnet.core.bpf_jit_harden                     = 2\nnet.ipv4.tcp_syn' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf 'cookies                     = 1\nnet.ipv4.tcp_low_latency                    = 1' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '\nnet.ipv4.tcp_fin_timeout                    = 10\nnet.ipv4.tcp_keepalive_time ' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '                = 600\nnet.core.netdev_max_backlog                 = 65535\nnet.' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf 'ipv4.tcp_max_tw_buckets                 = 2097151\nnet.ipv4.conf.all.rp_filter  ' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '               = 2\nnet.core.netdev_budget_usecs                = 5000\nnet.ipv4' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '.tcp_max_syn_backlog                = 65535\nnet.ipv4.ip_local_port_range       ' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '         = 1024 65535\nnet.ipv4.tcp_keepalive_intvl                = 30\nnet.ipv' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '4.tcp_keepalive_probes               = 6\nnet.ipv4.conf.default.rp_filter       ' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '      = 2\nnet.ipv4.conf.all.send_redirects            = 0\nnet.ipv6.conf.all.ac' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf 'cept_redirects          = 0\nnet.ipv4.conf.all.accept_redirects          = 0\nne' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf 't.ipv4.tcp_slow_start_after_idle          = 0\nnet.ipv4.icmp_echo_ignore_broadca' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf 'sts        = 1\nnet.ipv4.conf.default.send_redirects        = 0\nnet.ipv4.conf.d' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf 'efault.accept_redirects      = 0\nnet.ipv6.conf.default.accept_redirects      = ' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"
/usr/bin/printf '0\nnet.ipv4.icmp_ignore_bogus_error_responses  = 1\n' >> "${SETUP_DIRECTORY}/etc/sysctl.d/network.conf"

# Create file "/etc/systemd/network/en.network"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/network/en.network"
/usr/bin/printf '[Match]\nName        = en*\nName        = eth*\n\n[Network]\nDHCP        = yes\n' >> "${SETUP_DIRECTORY}/etc/systemd/network/en.network"
/usr/bin/printf '\n[DHCP]\nUseDNS      = true\nUseDomains  = true\n' >> "${SETUP_DIRECTORY}/etc/systemd/network/en.network"

# Create file "/etc/systemd/system/archlinux-keyring-wkd-sync.service.d/override.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/system/archlinux-keyring-wkd-sync.service.d/override.conf"
/usr/bin/printf '[Service]\nExecStart =\nExecStart = -/usr/bin/archlinux-keyring-wkd-sync\n' >> "${SETUP_DIRECTORY}/etc/systemd/system/archlinux-keyring-wkd-sync.service.d/override.conf"

# Create file "/etc/systemd/system/ldconfig.service.d/override.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/system/ldconfig.service.d/override.conf"
/usr/bin/printf '[Service]\nExecStart =\nExecStart =  /sbin/ldconfig -XC /var/cache/ld.so.cache\n' >> "${SETUP_DIRECTORY}/etc/systemd/system/ldconfig.service.d/override.conf"

# Create file "/etc/systemd/coredump.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/coredump.conf"
/usr/bin/printf '[Coredump]\nStorage = none\n' >> "${SETUP_DIRECTORY}/etc/systemd/coredump.conf"

# Create file "/etc/systemd/homed.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/homed.conf"
/usr/bin/printf '[Home]\nDefaultStorage          = directory\nDefaultFileSystemType   = btrfs\n' >> "${SETUP_DIRECTORY}/etc/systemd/homed.conf"

# Create file "/etc/systemd/journald.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/journald.conf"
/usr/bin/printf '[Journal]\nAudit               = on\nStorage             = volatile\nReadKMsg   ' >> "${SETUP_DIRECTORY}/etc/systemd/journald.conf"
/usr/bin/printf '         = yes\nCompress            = yes\nSplitMode           = uid\nMaxFileSec' >> "${SETUP_DIRECTORY}/etc/systemd/journald.conf"
/usr/bin/printf '          = 12h\nSystemMaxUse        = 64M\nMaxLevelStore       = info\nForwardT' >> "${SETUP_DIRECTORY}/etc/systemd/journald.conf"
/usr/bin/printf 'oSyslog     = no\nMaxRetentionSec     = 12h\nSystemMaxFileSize   = 32M\n' >> "${SETUP_DIRECTORY}/etc/systemd/journald.conf"

# Create file "/etc/systemd/logind.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf '[Login]\nNAutoVTs                        = 2\nReserveVT                       = ' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf '5\nRemoveIPC                       = yes\nIdleAction                      = igno' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf 're\nSessionsMax                     = 8192\nInhibitorsMax                   = 81' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf '92\nHandlePowerKey                  = poweroff\nHandleLidSwitch                 ' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf '= ignore\nHandleRebootKey                 = reboot\nUserStopDelaySec            ' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf '    = 10\nHandleSuspendKey                = suspend\nKillExcludeUsers           ' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf '     = root\nKillUserProcesses               = yes\nHoldoffTimeoutSec           ' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf '    = 10s\nInhibitDelayMaxSec              = 5s\nHandleHibernateKey             ' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf ' = hibernate\nRuntimeDirectorySize            = 10%%\nHandleLidSwitchDocked     ' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf '      = ignore\nPowerKeyIgnoreInhibited         = no\nHandleRebootKeyLongPress  ' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf '      = poweroff\nRebootKeyIgnoreInhibited        = no\nLidSwitchIgnoreInhibited' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf '        = no\nSuspendKeyIgnoreInhibited       = no\nHibernateKeyIgnoreInhibited ' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"
/usr/bin/printf '    = no\nHandleLidSwitchExternalPower    = ignore\n' >> "${SETUP_DIRECTORY}/etc/systemd/logind.conf"

# Create file "/etc/systemd/networkd.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/networkd.conf"
/usr/bin/printf '[Network]\nSpeedMeter          = no\nManageForeignRoutes = yes\n\n[DHCP]\nDUIDTy' >> "${SETUP_DIRECTORY}/etc/systemd/networkd.conf"
/usr/bin/printf 'pe            = vendor\n' >> "${SETUP_DIRECTORY}/etc/systemd/networkd.conf"

# Create file "/etc/systemd/pstore.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/pstore.conf"
/usr/bin/printf '[PStore]\nStorage = none\n' >> "${SETUP_DIRECTORY}/etc/systemd/pstore.conf"

# Create file "/etc/systemd/resolved.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/resolved.conf"
/usr/bin/printf '[Resolve]\nCache                       = yes\nLLMNR                       = no\n' >> "${SETUP_DIRECTORY}/etc/systemd/resolved.conf"
/usr/bin/printf 'DNSSEC                      = allow-downgrade\nDNSOverTLS                  = no\n' >> "${SETUP_DIRECTORY}/etc/systemd/resolved.conf"
/usr/bin/printf 'FallbackDNS                 = 127.0.0.1\nReadEtcHosts                = yes\nMult' >> "${SETUP_DIRECTORY}/etc/systemd/resolved.conf"
/usr/bin/printf 'icastDNS                = no\nDNSStubListener             = no\nResolveUnicastSi' >> "${SETUP_DIRECTORY}/etc/systemd/resolved.conf"
/usr/bin/printf 'ngleLabel   = no\n' >> "${SETUP_DIRECTORY}/etc/systemd/resolved.conf"

# Create file "/etc/systemd/sleep.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/sleep.conf"
/usr/bin/printf '[Sleep]\nAllowSuspend                = no\nAllowHibernation            = no\nAll' >> "${SETUP_DIRECTORY}/etc/systemd/sleep.conf"
/usr/bin/printf 'owHybridSleep            = no\nAllowSuspendThenHibernate   = no\n' >> "${SETUP_DIRECTORY}/etc/systemd/sleep.conf"

# Create file "/etc/systemd/system.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf '[Manager]\nLogTime                         = no\nLogColor                       ' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf ' = yes\nDumpCore                        = no\nLogLevel                        = ' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf 'warning\nLogTarget                       = journal-or-kmsg\nShowStatus          ' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf '            = auto\nNUMAPolicy                      = default\nCrashShell       ' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf '               = no\nCrashReboot                     = no\nLogLocation          ' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf '           = no\nCrashChangeVT                   = no\nNoNewPrivileges          ' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf '       = no\nDefaultTasksMax                 = 15%%\nDefaultOOMPolicy           ' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf '     = stop\nStatusUnitFormat                = description\nKExecWatchdogSec    ' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf '            = off\nDefaultRestartSec               = 100ms\nDefaultLimitNOFILE  ' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf '            = 1024:524288\nRuntimeWatchdogSec              = 0\nShutdownWatchdog' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf 'Sec             = 0\nDefaultIOAccounting             = no\nDefaultIPAccounting  ' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf '           = no\nDefaultStandardError            = inherit\nDefaultCPUAccounting' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf '            = no\nDefaultTimeoutStopSec           = 30s\nDefaultStandardOutput  ' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf '         = journal\nCtrlAltDelBurstAction           = reboot-force\nDefaultTimeo' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf 'utStartSec          = 30s\nDefaultStartLimitBurst          = 5\nDefaultTasksAcco' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf 'unting          = yes\nDefaultTimerAccuracySec         = 1min\nDefaultMemoryAcco' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf 'unting         = yes\nDefaultBlockIOAccounting        = no\nDefaultStartLimitInt' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"
/usr/bin/printf 'ervalSec    = 10s\n' >> "${SETUP_DIRECTORY}/etc/systemd/system.conf"

# Create file "/etc/systemd/timesyncd.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/systemd/timesyncd.conf"
/usr/bin/printf '[Time]\nNTP                 = time.nist.gov time-a-g.nist.gov time-b-g.nist.gov\n' >> "${SETUP_DIRECTORY}/etc/systemd/timesyncd.conf"
/usr/bin/printf 'SaveIntervalSec     = 360\nRootDistanceMaxSec  = 30\nPollIntervalMinSec  = 32\nP' >> "${SETUP_DIRECTORY}/etc/systemd/timesyncd.conf"
/usr/bin/printf 'ollIntervalMaxSec  = 2048\n' >> "${SETUP_DIRECTORY}/etc/systemd/timesyncd.conf"

# Create file "/etc/hostname"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/hostname"
/usr/bin/printf 'rpi' >> "${SETUP_DIRECTORY}/etc/hostname"

# Create file "/etc/hosts"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/hosts"
/usr/bin/printf '::1         localhost.local     localhost\n127.0.0.1   localhost.local     local' >> "${SETUP_DIRECTORY}/etc/hosts"
/usr/bin/printf 'host\n\n127.0.0.1   rpi.local           rpi\n' >> "${SETUP_DIRECTORY}/etc/hosts"

# Create file "/etc/locale.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/locale.conf"
/usr/bin/printf 'LANG=en_US.UTF-8\nLC_TIME="en_US.UTF-8"\nLC_NAME="en_US.UTF-8"\nLC_CTYPE="en_US.' >> "${SETUP_DIRECTORY}/etc/locale.conf"
/usr/bin/printf 'UTF-8"\nLC_PAPER="en_US.UTF-8"\nLC_NUMERIC="en_US.UTF-8"\nLC_COLLATE="en_US.UTF-' >> "${SETUP_DIRECTORY}/etc/locale.conf"
/usr/bin/printf '8"\nLC_ADDRESS="en_US.UTF-8"\nLC_MONETARY="en_US.UTF-8"\nLC_MESSAGES="en_US.UTF-' >> "${SETUP_DIRECTORY}/etc/locale.conf"
/usr/bin/printf '8"\nLC_TELEPHONE="en_US.UTF-8"\nLC_MEASUREMENT="en_US.UTF-8"\nLC_IDENTIFICATION=' >> "${SETUP_DIRECTORY}/etc/locale.conf"
/usr/bin/printf '"en_US.UTF-8"\n' >> "${SETUP_DIRECTORY}/etc/locale.conf"

# Create file "/etc/locale.gen"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/locale.gen"
/usr/bin/printf 'en_US.UTF-8 UTF-8\nen_US       ISO-8859-1\n' >> "${SETUP_DIRECTORY}/etc/locale.gen"

# Create file "/etc/mkinitcpio.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/mkinitcpio.conf"
/usr/bin/printf 'BINARIES=(btrfs)\nCOMPRESSION="lz4"\nFILES=(/usr/bin/btrfs)\nCOMPRESSION_OPTIONS' >> "${SETUP_DIRECTORY}/etc/mkinitcpio.conf"
/usr/bin/printf '=(-9)\nMODULES_DECOMPRESS="yes"\nHOOKS=(systemd autodetect modconf block sd-vcon' >> "${SETUP_DIRECTORY}/etc/mkinitcpio.conf"
/usr/bin/printf 'sole btrfs filesystems)\n' >> "${SETUP_DIRECTORY}/etc/mkinitcpio.conf"

# Create file "/etc/motd"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/motd"

# Create file "/etc/nsswitch.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/nsswitch.conf"
/usr/bin/printf 'passwd:     files systemd\ngroup:      files systemd\ngshadow:    files systemd\n' >> "${SETUP_DIRECTORY}/etc/nsswitch.conf"
/usr/bin/printf 'shadow:     files systemd\n\npublickey:  files\n\nhosts:      files myhostname r' >> "${SETUP_DIRECTORY}/etc/nsswitch.conf"
/usr/bin/printf 'esolve dns\nnetworks:   files\n\nprotocols:  files\nservices:   files\nethers:  ' >> "${SETUP_DIRECTORY}/etc/nsswitch.conf"
/usr/bin/printf '   files\nrpc:        files\n\nnetgroup:   files\n' >> "${SETUP_DIRECTORY}/etc/nsswitch.conf"

# Create file "/etc/pacman.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/pacman.conf"
/usr/bin/printf '[options]\nDBPath              = /var/lib/pacman\nGPGDir              = /etc/pac' >> "${SETUP_DIRECTORY}/etc/pacman.conf"
/usr/bin/printf 'man.d/gnupg\nRootDir             = /\nHookDir             = /etc/pacman.d/hooks\n' >> "${SETUP_DIRECTORY}/etc/pacman.conf"
/usr/bin/printf 'LogFile             = /var/log/pacman.log\nHoldPkg             = pacman glibc\nC' >> "${SETUP_DIRECTORY}/etc/pacman.conf"
/usr/bin/printf 'acheDir            = /var/cache/pacman/pkg\nSigLevel            = Required Datab' >> "${SETUP_DIRECTORY}/etc/pacman.conf"
/usr/bin/printf 'aseOptional\nCleanMethod         = KeepInstalled\nArchitecture        = aarch64\n' >> "${SETUP_DIRECTORY}/etc/pacman.conf"
/usr/bin/printf 'ParallelDownloads   = 5\nLocalFileSigLevel   = Optional\n\nVerbosePkgLists\n\n[a' >> "${SETUP_DIRECTORY}/etc/pacman.conf"
/usr/bin/printf 'ur]\nInclude             = /etc/pacman.d/mirrorlist\n[core]\nInclude            ' >> "${SETUP_DIRECTORY}/etc/pacman.conf"
/usr/bin/printf ' = /etc/pacman.d/mirrorlist\n[extra]\nInclude             = /etc/pacman.d/mirror' >> "${SETUP_DIRECTORY}/etc/pacman.conf"
/usr/bin/printf 'list\n[alarm]\nInclude             = /etc/pacman.d/mirrorlist\n[community]\nIncl' >> "${SETUP_DIRECTORY}/etc/pacman.conf"
/usr/bin/printf 'ude             = /etc/pacman.d/mirrorlist\n' >> "${SETUP_DIRECTORY}/etc/pacman.conf"

# Create file "/etc/sysless"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/sysless"
/usr/bin/printf '\x00\x4D\x2B\x47\x63\x00\x00\x65\x00\x00\x76\x34\x00\x4C\x45\x53\x53\x00\x81\x2D' >> "${SETUP_DIRECTORY}/etc/sysless"
/usr/bin/printf '\x69\x20\x2D\x52\x00\x4C\x45\x53\x53\x48\x49\x53\x54\x53\x49\x5A\x45\x00\x81\x30' >> "${SETUP_DIRECTORY}/etc/sysless"
/usr/bin/printf '\x00\x4C\x45\x53\x53\x48\x49\x53\x54\x46\x49\x4C\x45\x00\x81\x2F\x64\x65\x76\x2F' >> "${SETUP_DIRECTORY}/etc/sysless"
/usr/bin/printf '\x6E\x75\x6C\x6C\x00\x78\x45\x6E\x64' >> "${SETUP_DIRECTORY}/etc/sysless"

# Create file "/etc/vconsole.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/vconsole.conf"
/usr/bin/printf 'KEYMAP=us\n' >> "${SETUP_DIRECTORY}/etc/vconsole.conf"

# Create file "/etc/login.defs"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf '# Currently not used.\n# YESCRYPT_COST_FACTOR    5\n\nUMASK                   00' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf '27\nMAIL_DIR                /var/spool/mail\nMOTD_FILE\nHOME_MODE               ' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf '0700\nFAIL_DELAY              3\nCREATE_HOME             no\nNONEXISTENT        ' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf '     /nonexistent\nDEFAULT_HOME            yes\nFORCE_SHADOW            yes\nCHF' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf 'N_RESTRICT           rwh\nENCRYPT_METHOD          YESCRYPT\nHUSHLOGIN_FILE      ' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf '    .config/hushlogin\nUSERGROUPS_ENAB         yes\nHMAC_CRYPTO_ALGO        SHA5' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf '12\nLOG_UNKFAIL_ENAB        no\nMAX_MEMBERS_PER_GROUP   0\nGRANT_AUX_GROUP_SUBID' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf 'S  yes\n\nENV_PATH                PATH=/usr/local/sbin:/usr/local/bin:/usr/bin\n' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf 'ENV_SUPATH              PATH=/usr/local/sbin:/usr/bin\n\nTTYPERM                ' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf ' 0620\nTTYGROUP                tty\n\nPASS_MAX_DAYS           99999\nPASS_MIN_DA' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf 'YS           0\nPASS_WARN_AGE           14\n\nLOGIN_RETRIES           5\nLOGIN_T' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf 'IMEOUT           120\n\nUID_MIN                 1000\nUID_MAX                 60' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf '000\n\nGID_MIN                 1000\nGID_MAX                 60000\n\nSYS_UID_MI' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf 'N             500\nSYS_UID_MAX             999\nSUB_UID_MIN             100000\n' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf 'SUB_UID_MAX             600100000\nSUB_UID_COUNT           65536\n\nSYS_GID_MIN ' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf '            500\nSYS_GID_MAX             999\nSUB_GID_MIN             100000\nSU' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf 'B_GID_MAX             600100000\nSUB_GID_COUNT           65536\n\nSHA_CRYPT_MIN_' >> "${SETUP_DIRECTORY}/etc/login.defs"
/usr/bin/printf 'ROUNDS    5000\nSHA_CRYPT_MAX_ROUNDS    5000\n' >> "${SETUP_DIRECTORY}/etc/login.defs"

# Create file "/etc/logrotate.conf"
/usr/bin/printf "" > "${SETUP_DIRECTORY}/etc/logrotate.conf"
/usr/bin/printf 'start       0\nweekly      0\nrotate      3\ninclude     /etc/logrotate.d\ntaboo' >> "${SETUP_DIRECTORY}/etc/logrotate.conf"
/usr/bin/printf 'ext    + .pacorig .pacnew .pacsave\ndateformat  -%%y%%m%%d\n\ncreate\nnomail\nda' >> "${SETUP_DIRECTORY}/etc/logrotate.conf"
/usr/bin/printf 'teext\nnoolddir\ncompress\nmissingok\nnotifempty\n\n/var/log/wtmp {\n    monthly' >> "${SETUP_DIRECTORY}/etc/logrotate.conf"
/usr/bin/printf '\n    missingok\n\n    create  0664 root utmp\n    rotate  1\n    minsize 1M\n}\n' >> "${SETUP_DIRECTORY}/etc/logrotate.conf"
/usr/bin/printf '/var/log/btmp {\n    monthly\n    missingok\n\n    create  0600 root utmp\n    r' >> "${SETUP_DIRECTORY}/etc/logrotate.conf"
/usr/bin/printf 'otate  1\n}\n' >> "${SETUP_DIRECTORY}/etc/logrotate.conf"

