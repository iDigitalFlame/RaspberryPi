#!/bin/bash
# Automatically generated build files script.
# Args: build-config.py Config config.sh

mkdir -p "${ROOT}${SYSCONFIG_DIR}/bin" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/iptables" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/profile.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/security/limits.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/ssh" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/systemd/network" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system/ldconfig.service.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system/archlinux-keyring-wkd-sync.service.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/systemd" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/conf.d" 2> /dev/null

# Create file "/bin/relink"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '#!/usr/bin/bash\n\nDEBUG=0\n\nif [ $# -ne 2 ]; then\n    echo "relink <config so' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'urce> <config target> [debug]"\n    exit 1\nfi\n\nif [ $# -eq 3 ]; then\n    DEB' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'UG=1\nfi\n\nlist() {\n    if [ $# -ne 2 ]; then\n        return 1\n    fi\n    f' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'iles_src=${2%%/}\n    files_target=${1%%/}\n    find "$files_target" -type f -pr' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'int | while IFS= read -r file; do\n        file_name=$(printf "%%s" "$file" | aw' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'k "{gsub(\\"${files_target}\\", \\"\\"); print \\$1}")\n        if ! echo "$file' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '_name" | grep -qE '\''.(nlk|nolink)$|^/.git(|ignore$|config$)|^/(LICENSE|license' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '|.vscode)$|^/[a-zA-Z0-9_.-]+.(md|vscode|MD|code-workspace)$'\''; then\n         ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '   check "${files_src}${file_name}" "${files_target}${file_name}"\n        fi\n ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '   done\n    return 0\n}\n\nlink() {\n    if [ $# -ne 2 ]; then\n        return ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '1\n    fi\n    rm -f "$1" 2> /dev/null\n    file_dir=$(dirname "$1")\n    if ! [' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf ' -d "$file_dir" ]; then\n        printf "Making \\"%%s\\"..\\n" "$file_dir"\n   ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '     if ! mkdir -p "$file_dir" 2> /dev/null; then\n            panic "Cannot cre' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'ate directory \\"${file_dir}\\"!"\n        fi\n        if [ "$UID" = "0" ]; then' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '\n            chmod 0555 "$file_dir"\n        else\n            chmod 0755 "$fil' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'e_dir"\n        fi\n    fi\n    if ! ln -s "$2" "$1"; then\n        panic "Could' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf ' not link \\"${1}\\" to \\"${2}\\"!"\n    fi\n    printf "[+] Relinked \\"%%s\\"' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf ' to \\"%%s\\".\\n" "$1" "$2"\n    return 0\n}\n\ncheck() {\n    if [ $# -ne 2 ];' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf ' then\n        return 1\n    fi\n    if [ $DEBUG -eq 1 ]; then\n        printf "' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '[+] Checking \\"%%s\\"..\\n" "$1"\n    fi\n    if ! [ -L "$1" ]; then\n        p' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'rintf "File \\"%%s\\" is invalid, updating!\\n" "$1"\n        link "$1" "$2"\n  ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '  else\n        if ! [ "$(readlink "$1")" = "$2" ]; then\n            printf "Fi' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'le \\"%%s\\" is invalid, updating!\\n" "$1"\n            link "$1" "$2"\n       ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf ' else\n            if [ $DEBUG -eq 1 ]; then\n                printf "File \\"%%' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 's\\" is valid!\\n" "$1"\n            fi\n        fi\n    fi\n    return 0\n}\n\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'panic() {\n    echo "[!] $1"\n    exit 1\n}\n\nif ! [ -d "$1" ]; then\n    panic' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf ' "Config source directory \\"${1}\\" does not exist!"\nfi\nif ! [ -d "$2" ]; the' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'n\n    if ! mkdir -p "$2" 2> /dev/null; then\n        panic "Could not create ta' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'rget directory \\"${2}\\"!"\n    fi\nfi\n\nlist "$1" "$2"\nexit 0\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"

# Create file "/bin/syscheck"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf '#!/usr/bin/bash\n\npause() {\n    printf "Press ENTER to continue.."\n    read -' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf 'r\n    echo\n}\n\nif ! [ "$UID" = "0" ]; then\n    echo "Only root can do this!"' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf '\n    exit 1\nfi\n\nuname -a\npause\nsystemctl --failed\npause\nifconfig\npause\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf 'netstat -panut\npause\nps xfua\npause\ndf -h\npause\nmount\npause\npacman -Syy 1' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf '> /dev/null\necho "Orphaned Packages Found:"\npacman -Qtdq\necho "Done!"\nexit 0' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf '\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"

# Create file "/bin/syslink"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '#!/usr/bin/bash\n\nsource "/etc/sysconfig.conf" 2> /dev/null\nif [ -z "$SYSCONFI' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'G" ]; then\n    echo "Could not find the System Configuration directory!"\n    e' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'xit 1\nfi\nif ! [ -d "$SYSCONFIG" ]; then\n    printf "System Configuration dire' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'ctory \\"%%s\\" does not exist!\\n" "$SYSCONFIG"\n    exit 1\nfi\n\nSYSCONFIG=${' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'SYSCONFIG%%/}\n\nif ! [ "$UID" = "0" ]; then\n    echo "Only root can do this!"\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '    exit 1\nfi\n\nrelink "$SYSCONFIG" /\n\npacman -Qeq 1> "${SYSCONFIG}/packages' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '.md"\ncp "/etc/fstab" "${SYSCONFIG}/etc/fstab.nlk"\nsystemctl list-unit-files | ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'grep "masked" | awk '\''{print $1}'\'' 1> "${SYSCONFIG}/masked.md"\nsystemctl li' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'st-unit-files | awk '\''{print $1" "$2}'\'' | grep "enabled" | grep -vE ".target' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '|enabled-runtime" | awk '\''{print $1}'\'' 1> "${SYSCONFIG}/units.md"\nsystemctl' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' list-units | grep "@." | grep -vE "dead|exited" | awk '\''{print $1}'\'' | grep' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' -vE "getty|user|blockdev" | grep "@." 1> "${SYSCONFIG}/indirect.md"\n\nchown -R' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' root:root "$SYSCONFIG"\nchmod -R 0555 "$SYSCONFIG"\n\nfind "$SYSCONFIG" -type f' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' -exec chmod 0444 {} \\;\nfind "$SYSCONFIG" -type d -exec chmod 0555 {} \\;\n\nc' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'hmod -R 0555 "${SYSCONFIG}/bin"\nchmod -R 0555 "${SYSCONFIG}/etc/profile.d"\nchm' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'od -R 0500 "${SYSCONFIG}/etc/syscheck.d"\n\nchmod 0555 "${SYSCONFIG}/etc/ssh"\nc' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'hmod 0500 "${SYSCONFIG}/etc/sysctl.d"\nchmod 0500 "${SYSCONFIG}/etc/security"\nc' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'hmod 0500 "${SYSCONFIG}/etc/iptables"\nchmod 0500 "${SYSCONFIG}/etc/pacman.d/hoo' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'ks"\nchmod 0400 "${SYSCONFIG}/etc/mkinitcpio.conf"\nchmod 0440 "${SYSCONFIG}/etc' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '/ssh/sshd_config"\nchmod 0500 "${SYSCONFIG}/etc/security/limits.d"\nchmod 0400 "' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '${SYSCONFIG}/etc/sysctl.d/kernel.conf"\nchmod 0400 "${SYSCONFIG}/etc/systemd/cor' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'edump.conf"\nchmod 0400 "${SYSCONFIG}/etc/iptables/iptables.rules"\nchmod 0400 "' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '${SYSCONFIG}/etc/iptables/ip6tables.rules"\nchmod 0400 "${SYSCONFIG}/etc/securit' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'y/limits.d/limits.conf"\n\nchmod 0400 "${SYSCONFIG}"/etc/iptables/*\nchmod 0400 ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '"${SYSCONFIG}"/etc/pacman.d/hooks/*\n\nchmod 0400 /etc/iptables/*\nchmod 0400 /e' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'tc/pacman.d/hooks/*\n\nchmod -R 0555 "/etc/profile.d"\nchmod -R 0500 "/etc/sysch' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'eck.d"\n\nchmod 0555 "/etc/ssh"\nchmod 0555 "/etc/systemd"\nchmod 0500 "/etc/sys' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'ctl.d"\nchmod 0500 "/etc/iptables"\nchmod 0500 "/etc/security"\nchmod 0500 "/etc' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '/pacman.d/hooks"\nchmod 0500 "/etc/security/limits.d"\n\nchmod 0444 "/etc/motd"\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'chmod 0444 "/etc/hosts"\nchmod 0550 "/etc/pacman.d"\nchmod 0444 "/etc/hostname"\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'chmod 0444 "/etc/locale.gen"\nchmod 0444 "/etc/resolv.conf"\nchmod 0400 "/etc/pa' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'cman.conf"\nchmod 0444 "/etc/nsswitch.conf"\nchmod 0400 "/etc/vconsole.conf"\nch' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'mod 0444 "/etc/sysconfig.conf"\nchmod 0444 "/etc/ssh/ssh_config"\nchmod 0400 "/e' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'tc/mkinitcpio.conf"\n\nchown root:root -R "/etc/systemd"\nchown root:root -R "/e' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'tc/iptables"\nchown root:root -R "/etc/pacman.d"\nchown root:root -R "/etc/secur' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'ity"\nchown root:root -R "/etc/sysctl.d"\nchown root:root -R "/etc/profile.d"\nc' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'hown root:root -R "/etc/syscheck.d"\n\nchown root:root "/etc/motd"\nchown root:r' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'oot "/etc/hosts"\nchown root:root "/etc/hostname"\nchown root:root "/etc/locale.' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'gen"\nchown root:root "/etc/resolv.conf"\nchown root:root "/etc/pacman.conf"\nch' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'own root:root "/etc/vconsole.conf"\nchown root:root "/etc/nsswitch.conf"\nchown ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'root:root "/etc/sysconfig.conf"\nchown root:root "/etc/mkinitcpio.conf"\n\nfind ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '"/etc/ssh" -type f -exec chmod 0400 {} \\;\nfind "/etc/systemd" -type f -exec ch' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'mod 0444 {} \\;\nfind "/etc/pacman.d" -type f -exec chmod 0440 {} \\;\nfind "/et' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'c/sysctl.d" -type f -exec chmod 0440 {} \\;\nfind "/etc/security" -type f -exec ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'chmod 0440 {} \\;\nfind "/etc/systemd/network" -type f -exec chmod 0444 {} \\;\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '\nif [ -d "/etc/syscheck.d" ]; then\n    for entry in /etc/syscheck.d/*.sh; do\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '        if [ -f "$entry" ]; then\n            source "$entry"\n        fi\n    d' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'one\nfi\n\necho "Broken Links Found:"\nfind /etc -xtype l -xdev 2> /dev/null | g' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'rep -vE "/proc|/tmp|/run"\necho "Done!"\nexit 0\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"

# Create file "/bin/sysupdate"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf '#!/usr/bin/bash\n\nif ! [ "$UID" = "0" ]; then\n    echo "Only root can do this!' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf '"\n    exit 1\nfi\n\nsource "/etc/sysconfig.conf" 2> /dev/null\nif [ -z "$SYSCON' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf 'FIG" ]; then\n    echo "Could not find the System Configuration directory!"\n   ' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf ' exit 1\nfi\nif ! [ -d "$SYSCONFIG" ]; then\n    printf "System Configuration di' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf 'rectory \\"%%s\\" does not exist!\\n" "$SYSCONFIG"\n    exit 1\nfi\n\nmount -o r' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf 'w,remount /\n\nif [ "$1" == "--auto" ]; then\n    if [ "$2" == "--download" ]; t' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf 'hen\n        pacman -Syuw --noconfirm\n        exit 0\n    fi\n    pacman -Syu -' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf '-noconfirm\nelse\n    pacman -Syu\nfi\n\nmount -o rw,remount /\nsyslink\nmount -' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf 'o ro,remount / 2> /dev/null || mount -Ro ro,remount /\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"

# Create file "/etc/iptables/ip6tables.rules"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/iptables/ip6tables.rules"
/usr/bin/printf '*filter\n:INPUT DROP [0:0]\n:FORWARD DROP [0:0]\n:OUTPUT DROP [0:0]\nCOMMIT\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/iptables/ip6tables.rules"

# Create file "/etc/iptables/iptables.rules"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/iptables/iptables.rules"
/usr/bin/printf '*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\nCOMMI' >> "${ROOT}${SYSCONFIG_DIR}/etc/iptables/iptables.rules"
/usr/bin/printf 'T' >> "${ROOT}${SYSCONFIG_DIR}/etc/iptables/iptables.rules"

# Create file "/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf 'on   = Install\nOperation   = Upgrade\n\n[Action]\nWhen        = PreTransaction\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf 'Exec        = /usr/bin/mount -o remount,rw /\nDescription = Mounting / as read/w' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf 'rite..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"

# Create file "/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = iptables\nOperation   = Upgrade\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf '\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bin/bash -c "rm /e' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf 'tc/iptables/simple_firewall.rules; rm /etc/iptables/empty.rules"\nDescription = ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf 'Removing simple rule files..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"

# Create file "/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf 'on   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bi' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf 'n/bash -c "pacman -Qtdq || echo '\''No orphans found.'\''"\nDescription = Findin' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf 'g orphan packages..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"

# Create file "/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf 'on   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bi' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf 'n/bash -c "paccache -rk2; paccache -ruk0"\nDescription = Removing old cached pac' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf 'kages..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"

# Create file "/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf 'on   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bi' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf 'n/bash -c "find /etc -type f -name *.pac* -ls"\nDescription = Looking for *.pac*' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf ' files..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"

# Create file "/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf 'on   = Install\nOperation   = Upgrade\n\n[Action]\nWhen        = PostTransaction' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf '\nExec        = /usr/bin/syslink\nDescription = Fixing permissions for system fi' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf 'les..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"

# Create file "/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf 'on   = Install\nOperation   = Upgrade\n\n[Action]\nWhen        = PostTransaction' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf '\nExec        = /usr/bin/bash -c "mount -ro remount,ro / 2> /dev/null || mount -' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf 'Rro remount,ro /"\nDescription = Mounting / as read only..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"

# Create file "/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf '[Trigger]\nType        = Path\nTarget      = usr/lib/modules/*/vmlinuz\nTarget  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf '    = usr/lib/initcpio/*\nOperation   = Remove\nOperation   = Install\nOperation' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf '   = Upgrade\n\n[Trigger]\nType        = Package\nTarget      = linux\nTarget   ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf '   = linux-*\nTarget      = systemd\nTarget      = mkinitcpio\nTarget      = mki' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf 'nitcpio-git\nTarget      = mkinitcpio-busybox\nTarget      = raspberrypi-firmwar' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf 'e\nTarget      = raspberrypi-bootloader\nOperation   = Remove\nOperation   = Ins' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf 'tall\nOperation   = Upgrade\n\n[Action]\nWhen        = PreTransaction\nExec     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf '   = /usr/bin/mount -o remount,rw /boot\nDescription = Mounting /boot as read/wr' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-boot.hook"
/usr/bin/printf 'ite..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-boot.hook"

# Create file "/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf '[Trigger]\nType        = Path\nTarget      = usr/lib/modules/*/vmlinuz\nTarget  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf '    = usr/lib/initcpio/*\nOperation   = Remove\nOperation   = Install\nOperation' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf '   = Upgrade\n\n[Trigger]\nType        = Package\nTarget      = linux\nTarget   ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf '   = linux-*\nTarget      = systemd\nTarget      = mkinitcpio\nTarget      = mki' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf 'nitcpio-git\nTarget      = mkinitcpio-busybox\nTarget      = raspberrypi-firmwar' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf 'e\nTarget      = raspberrypi-bootloader\nOperation   = Remove\nOperation   = Ins' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf 'tall\nOperation   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec    ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf '    = /usr/bin/mount -ro remount,ro /boot\nDescription = Mounting /boot as read ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-boot.hook"
/usr/bin/printf 'only..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-boot.hook"

# Create file "/etc/profile.d/alias.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/alias.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nalias nano="nano -SLlwxiE --tabsize=4"\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/alias.sh"

# Create file "/etc/profile.d/history.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/history.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nHISTSIZE=500\nHISTFILESIZE=0\nHISTFILE=/dev/null\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/history.sh"

# Create file "/etc/profile.d/umask.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/umask.sh"
/usr/bin/printf '#!/usr/bin/bash\n\numask 0027\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/umask.sh"

# Create file "/etc/profile.d/z_system_status.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nstatus_repo() {\n    if ! source "/etc/sysconfig.conf" 2> /de' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'v/null; then\n        return 0\n    fi\n    if [ -z "$SYSCONFIG" ]; then\n      ' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '  return 0\n    fi\n    if ! [ -d "$SYSCONFIG" ]; then\n        return 0\n    fi' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '\n    SYSCONFIG=${SYSCONFIG%%/}\n    if ! [ -d "${SYSCONFIG}/.git" ]; then\n    ' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '    return 0\n    fi\n    if bash -c "cd ${SYSCONFIG}; git status | grep -qiE '\''' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'modified|deleted|Untracked'\''"; then\n        printf '\''# Config:\\tSync neede' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'd, use "syspush"\\n'\''\n    else\n        printf "# Config:\\tUp-to-Date\\n"\n ' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '   fi\n}\nstatus_storage() {\n    echo "# Storage:"\n    df -h | grep -v "tmpfs"' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' | grep -E '\''/dev/|/opt/|/mnt/'\'' | sort -r | awk '\''{print ""$1" "$5" ("$3"' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '/"$2")"}'\'' | column -t | awk '\''{print "#     "$0}'\''\n}\nstatus_network() {' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '\n    echo "# Interface Addresses:"\n    for i in $(ip addr | grep "inet" | grep' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' -vE "::1|127.0.0.1|link" | awk '\''{print $2}'\'' | awk -F'\''/'\'' '\''{print ' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '$1}'\''); do\n        printf "#     %%s\\n" "$i"\n    done\n}\nstatus_services()' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' {\n    printf "# Network:\\t%%s Established, " "$(netstat -panut 2> /dev/null |' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' grep -c "ESTABLISHED")"\n    printf "%%s Listening\\n" "$(netstat -panut 2> /de' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'v/null | grep -c "LISTEN")"\n    printf "# Services:\\t%%s Running, " "$(systemc' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'tl --state=active --no-legend --no-pager | grep ".service" | grep -c "running")"' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '\n    printf "%%s Failed, " "$(systemctl --state=failed --no-legend --no-pager |' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' grep -c ".service")"\n    printf "%%s Timers\\n" "$(systemctl --all --no-legend' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' --no-pager | grep -c ".timer")"\n}\n\nif [[ $- != *i* ]] || [ -n "$SSH_CLIENT" ' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ']; then\n    printf "###########################################################' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '###\\n"\n    status_storage\n    status_network\n    printf "# Uptime:\\t%%s\\n"' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' "$(uptime --pretty | sed '\''s/up //g'\'')"\n    printf "# Kernel:\\t%%s\\n" "$' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '(uname -r)"\n    status_repo\n    status_services\n    printf "#################' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '#############################################\\n"\nfi\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"

# Create file "/etc/security/limits.d/limits.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/security/limits.d/limits.conf"
/usr/bin/printf '* hard core 0\n* soft nproc 2500\n* hard nproc 5000\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/security/limits.d/limits.conf"

# Create file "/etc/ssh/ssh_config"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'Host *\n    Port                            22\n    MACs                        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '    hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@ope' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'nssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com\n    Tunnel           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '               no\n    Ciphers                         chacha20-poly1305@openssh' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'ctr\n    Protocol                        2\n    BatchMode                       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'no\n    ForwardX11                      no\n    CheckHostIP                     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'yes\n    IdentityFile                    ~/.ssh/id_rsa\n    IdentityFile        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '            ~/.ssh/id_ed25519\n    ForwardAgent                    no\n    KexAl' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'gorithms                   curve25519-sha256@libssh.org,diffie-hellman-group-exc' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'hange-sha256\n    VisualHostKey                   yes\n    AddressFamily        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '           any\n    ConnectTimeout                  30\n    HashKnownHosts      ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '            yes\n    HostKeyAlgorithms               ssh-ed25519-cert-v01@openss' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'h.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa\n    PermitLocalCommand  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '            no\n    GSSAPIAuthentication            no\n    PubkeyAuthentication' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '            yes\n    StrictHostKeyChecking           ask\n    PasswordAuthentica' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'tion          no\n    HostbasedAuthentication         no\n    GSSAPIDelegateCred' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'entials       no\n    ChallengeResponseAuthentication yes\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"

# Create file "/etc/ssh/sshd_config"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'Port                            22\nMACs                            hmac-sha2-51' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '2-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sh' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'a2-512,hmac-sha2-256,umac-128@openssh.com\nUsePAM                          yes\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'Ciphers                         chacha20-poly1305@openssh.com,aes256-gcm@openssh' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr\nHostKey           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '              /etc/ssh/ssh_host_rsa_key\nHostKey                         /etc/ss' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'h/ssh_host_ed25519_key\nProtocol                        2\nSubsystem            ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '           sftp /usr/lib/ssh/sftp-server\nPrintMotd                       no\nPe' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'rmitTTY                       yes\nCompression                     no\nMaxStartu' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'ps                     10:30:100\nGatewayPorts                    no\nPermitTunn' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'el                    no\nPrintLastLog                    yes\nIgnoreRhosts     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '               yes\nTCPKeepAlive                    yes\nAddressFamily          ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '         any\nListenAddress                   0.0.0.0\nKexAlgorithms            ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '       curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256\nLoginG' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'raceTime                  1m\nPermitRootLogin                 yes\nAllowTcpForwa' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'rding              no\nAuthorizedKeysFile              .ssh/authorized_keys\nCli' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'entAliveCountMax             0\nClientAliveInterval             600\nIgnoreUserK' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'nownHosts            no\nPermitEmptyPasswords            no\nAllowAgentForwardin' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'g            no\nPubkeyAuthentication            yes\nPasswordAuthentication    ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '      yes\nKerberosAuthentication          no\nHostbasedAuthentication         n' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'o\nChallengeResponseAuthentication no\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"

# Create file "/etc/syscheck.d/cache.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nrm "/etc/.updated" 2> /dev/null\nrm "/etc/.pwd.lock" 2> /dev/' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'null\nrm "/etc/ld.so.cache" 2> /dev/null\n\nif ! [ -e "/var/cache/ld.so.cache" ]' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf '; then\n    touch "/var/cache/ld.so.cache" 2> /dev/null\nfi\nln -s "/var/cache/l' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'd.so.cache" "/etc/ld.so.cache" 2> /dev/null\n\nchmod 0644 "/var/cache/ld.so.cach' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'e"\nchown root:root "/var/cache/ld.so.cache"\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"

# Create file "/etc/sysctl.d/kernel.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'fs.file-max                     = 372925\nvm.swappiness                   = 10\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'fs.suid_dumpable                = 0\nfs.protected_fifos              = 1\nfs.pro' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'tected_regular            = 1\nkernel.kptr_restrict            = 2\nkernel.dmesg' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf '_restrict           = 1\nfs.protected_symlinks           = 1\nfs.protected_hardl' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'inks          = 1\nkernel.yama.ptrace_scope        = 3\nkernel.kexec_load_disabl' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'ed      = 1\nfs.inotify.max_user_watches     = 16777215\nfs.inotify.max_queued_e' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'vents    = 32767\nvm.dirty_writeback_centisecs    = 1500\nfs.inotify.max_user_in' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'stances   = 4096\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"

# Create file "/etc/sysctl.d/network.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'net.core.rmem_max                           = 16777216\nnet.ipv4.tcp_rmem       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                    = 4096 1048576 2097152\nnet.ipv4.tcp_wmem                   ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '        = 4096 65536 16777216\nnet.core.wmem_max                           = 167' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '77216\nnet.core.somaxconn                          = 32768\nnet.core.optmem_max ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                        = 65536\nnet.ipv4.tcp_rfc1337                        = 1' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '\nnet.ipv4.udp_rmem_min                       = 8192\nnet.ipv4.udp_wmem_min     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                  = 8192\nnet.core.rmem_default                       = 1048576\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'net.core.wmem_default                       = 1048576\nnet.ipv4.tcp_fastopen    ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                   = 1\nnet.ipv4.tcp_tw_reuse                       = 1\nnet.cor' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'e.netdev_budget                      = 50000\nnet.ipv4.tcp_timestamps           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '          = 1\nnet.core.bpf_jit_harden                     = 2\nnet.ipv4.tcp_syn' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'cookies                     = 1\nnet.ipv4.tcp_low_latency                    = 1' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '\nnet.ipv4.tcp_fin_timeout                    = 10\nnet.ipv4.tcp_keepalive_time ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                = 600\nnet.core.netdev_max_backlog                 = 65535\nnet.' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'ipv4.tcp_max_tw_buckets                 = 2097151\nnet.ipv4.conf.all.rp_filter  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '               = 2\nnet.core.netdev_budget_usecs                = 5000\nnet.ipv4' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '.tcp_max_syn_backlog                = 65535\nnet.ipv4.ip_local_port_range       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '         = 1024 65535\nnet.ipv4.tcp_keepalive_intvl                = 30\nnet.ipv' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '4.tcp_keepalive_probes               = 6\nnet.ipv4.conf.default.rp_filter       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '      = 2\nnet.ipv4.conf.all.send_redirects            = 0\nnet.ipv4.conf.all.ac' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'cept_redirects          = 0\nnet.ipv4.tcp_slow_start_after_idle          = 0\nne' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 't.ipv4.icmp_echo_ignore_broadcasts        = 1\nnet.ipv4.conf.default.send_redire' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'cts        = 0\nnet.ipv4.conf.default.accept_redirects      = 0\nnet.ipv4.icmp_i' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'gnore_bogus_error_responses  = 1\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"

# Create file "/etc/sysctl.d/ipv6.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/ipv6.conf"
/usr/bin/printf 'net.ipv6.conf.all.use_tempaddr      = 2\nnet.ipv6.conf.default.use_tempaddr  = 2' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/ipv6.conf"
/usr/bin/printf '\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/ipv6.conf"

# Create file "/etc/systemd/network/eth0.network"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/network/eth0.network"
/usr/bin/printf '[Match]\nName        = eth0\n\n[Network]\nDHCP        = yes\n\n[DHCP]\nUseDNS   ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/network/eth0.network"
/usr/bin/printf '   = true\nUseDomains  = true\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/network/eth0.network"

# Create file "/etc/systemd/system/ldconfig.service.d/override.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system/ldconfig.service.d/override.conf"
/usr/bin/printf '[Service]\nExecStart =\nExecStart =  /sbin/ldconfig -XC /var/cache/ld.so.cache\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system/ldconfig.service.d/override.conf"

# Create file "/etc/systemd/system/archlinux-keyring-wkd-sync.service.d/override.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system/archlinux-keyring-wkd-sync.service.d/override.conf"
/usr/bin/printf '[Service]\nExecStart =\nExecStart = -/usr/bin/archlinux-keyring-wkd-sync\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system/archlinux-keyring-wkd-sync.service.d/override.conf"

# Create file "/etc/systemd/coredump.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/coredump.conf"
/usr/bin/printf '[Coredump]\nStorage = none\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/coredump.conf"

# Create file "/etc/systemd/homed.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/homed.conf"
/usr/bin/printf '[Home]\nDefaultStorage          = directory\nDefaultFileSystemType   = btrfs\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/homed.conf"

# Create file "/etc/systemd/journald.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"
/usr/bin/printf '[Journal]\nAudit               = on\nStorage             = volatile\nReadKMsg   ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"
/usr/bin/printf '         = yes\nCompress            = yes\nSplitMode           = uid\nMaxFileSec' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"
/usr/bin/printf '          = 12h\nSystemMaxUse        = 64M\nMaxLevelStore       = info\nForwardT' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"
/usr/bin/printf 'oSyslog     = no\nMaxRetentionSec     = 12h\nSystemMaxFileSize   = 32M\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"

# Create file "/etc/systemd/logind.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '[Login]\nNAutoVTs                        = 2\nReserveVT                       = ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '5\nRemoveIPC                       = yes\nIdleAction                      = igno' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf 're\nSessionsMax                     = 8192\nInhibitorsMax                   = 81' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '92\nHandlePowerKey                  = poweroff\nHandleLidSwitch                 ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '= ignore\nHandleRebootKey                 = reboot\nUserStopDelaySec            ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '    = 10\nHandleSuspendKey                = suspend\nKillExcludeUsers           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '     = root\nKillUserProcesses               = yes\nHoldoffTimeoutSec           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '    = 10s\nInhibitDelayMaxSec              = 5s\nHandleHibernateKey             ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf ' = hibernate\nRuntimeDirectorySize            = 10%%\nHandleLidSwitchDocked     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '      = ignore\nPowerKeyIgnoreInhibited         = no\nHandleRebootKeyLongPress  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '      = poweroff\nRebootKeyIgnoreInhibited        = no\nLidSwitchIgnoreInhibited' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '        = no\nSuspendKeyIgnoreInhibited       = no\nHibernateKeyIgnoreInhibited ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '    = no\nHandleLidSwitchExternalPower    = ignore\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"

# Create file "/etc/systemd/networkd.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/networkd.conf"
/usr/bin/printf '[Network]\nSpeedMeter          = no\nManageForeignRoutes = yes\n\n[DHCP]\nDUIDTy' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/networkd.conf"
/usr/bin/printf 'pe            = vendor\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/networkd.conf"

# Create file "/etc/systemd/pstore.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/pstore.conf"
/usr/bin/printf '[PStore]\nStorage = none\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/pstore.conf"

# Create file "/etc/systemd/resolved.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf '[Resolve]\nCache                       = yes\nLLMNR                       = no\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf 'DNSSEC                      = allow-downgrade\nDNSOverTLS                  = no\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf 'FallbackDNS                 = 127.0.0.1\nReadEtcHosts                = yes\nMult' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf 'icastDNS                = no\nDNSStubListener             = no\nResolveUnicastSi' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf 'ngleLabel   = no' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"

# Create file "/etc/systemd/sleep.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/sleep.conf"
/usr/bin/printf '[Sleep]\nAllowSuspend                = no\nAllowHibernation            = no\nAll' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/sleep.conf"
/usr/bin/printf 'owHybridSleep            = no\nAllowSuspendThenHibernate   = no\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/sleep.conf"

# Create file "/etc/systemd/system.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '[Manager]\nLogTime                         = no\nLogColor                       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf ' = yes\nDumpCore                        = no\nLogLevel                        = ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf 'warning\nLogTarget                       = journal-or-kmsg\nShowStatus          ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '            = auto\nNUMAPolicy                      = default\nCrashShell       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '               = no\nCrashReboot                     = no\nLogLocation          ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '           = no\nCrashChangeVT                   = no\nNoNewPrivileges          ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '       = no\nDefaultTasksMax                 = 15%%\nDefaultOOMPolicy           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '     = stop\nStatusUnitFormat                = description\nKExecWatchdogSec    ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '            = off\nDefaultRestartSec               = 100ms\nDefaultLimitNOFILE  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '            = 1024:524288\nRuntimeWatchdogSec              = 0\nShutdownWatchdog' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf 'Sec             = 0\nDefaultIOAccounting             = no\nDefaultIPAccounting  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '           = no\nDefaultStandardError            = inherit\nDefaultCPUAccounting' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '            = no\nDefaultTimeoutStopSec           = 30s\nDefaultStandardOutput  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '         = journal\nCtrlAltDelBurstAction           = reboot-force\nDefaultTimeo' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf 'utStartSec          = 30s\nDefaultStartLimitBurst          = 5\nDefaultTasksAcco' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf 'unting          = yes\nDefaultTimerAccuracySec         = 1min\nDefaultMemoryAcco' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf 'unting         = yes\nDefaultBlockIOAccounting        = no\nDefaultStartLimitInt' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf 'ervalSec    = 10s\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"

# Create file "/etc/systemd/timesyncd.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/timesyncd.conf"
/usr/bin/printf '[Time]\nNTP                 = time.nist.gov time-a-g.nist.gov time-b-g.nist.gov\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/timesyncd.conf"
/usr/bin/printf 'SaveIntervalSec     = 360\nRootDistanceMaxSec  = 30\nPollIntervalMinSec  = 32\nP' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/timesyncd.conf"
/usr/bin/printf 'ollIntervalMaxSec  = 2048\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/timesyncd.conf"

# Create file "/etc/hostname"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/hostname"
/usr/bin/printf 'rpi' >> "${ROOT}${SYSCONFIG_DIR}/etc/hostname"

# Create file "/etc/hosts"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/hosts"
/usr/bin/printf '::1         localhost.local     localhost\n127.0.0.1   localhost.local     local' >> "${ROOT}${SYSCONFIG_DIR}/etc/hosts"
/usr/bin/printf 'host\n127.0.0.1   rpi.local           rpi\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/hosts"

# Create file "/etc/locale.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/locale.conf"
/usr/bin/printf 'LANG=en_US.UTF-8\nLC_TIME="en_US.UTF-8"\nLC_NAME="en_US.UTF-8"\nLC_CTYPE="en_US.' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.conf"
/usr/bin/printf 'UTF-8"\nLC_PAPER="en_US.UTF-8"\nLC_NUMERIC="en_US.UTF-8"\nLC_COLLATE="en_US.UTF-' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.conf"
/usr/bin/printf '8"\nLC_ADDRESS="en_US.UTF-8"\nLC_MONETARY="en_US.UTF-8"\nLC_MESSAGES="en_US.UTF-' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.conf"
/usr/bin/printf '8"\nLC_TELEPHONE="en_US.UTF-8"\nLC_MEASUREMENT="en_US.UTF-8"\nLC_IDENTIFICATION=' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.conf"
/usr/bin/printf '"en_US.UTF-8"\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.conf"

# Create file "/etc/locale.gen"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/locale.gen"
/usr/bin/printf 'en_US.UTF-8 UTF-8\nen_US       ISO-8859-1\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.gen"

# Create file "/etc/mkinitcpio.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/mkinitcpio.conf"
/usr/bin/printf 'MODULES=()\nBINARIES=(btrfs)\nCOMPRESSION="lz4"\nFILES=(/usr/bin/btrfs)\nCOMPRES' >> "${ROOT}${SYSCONFIG_DIR}/etc/mkinitcpio.conf"
/usr/bin/printf 'SION_OPTIONS=(-9)\nMODULES_DECOMPRESS="yes"\nHOOKS=(systemd autodetect modconf b' >> "${ROOT}${SYSCONFIG_DIR}/etc/mkinitcpio.conf"
/usr/bin/printf 'lock sd-vconsole btrfs filesystems fsck)\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/mkinitcpio.conf"

# Create file "/etc/motd"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/motd"

# Create file "/etc/nsswitch.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"
/usr/bin/printf 'passwd:     files systemd\ngroup:      files systemd\ngshadow:    files systemd\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"
/usr/bin/printf 'shadow:     files systemd\n\npublickey:  files\n\nhosts:      files myhostname r' >> "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"
/usr/bin/printf 'esolve dns\nnetworks:   files\n\nprotocols:  files\nservices:   files\nethers:  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"
/usr/bin/printf '   files\nrpc:        files\n\nnetgroup:   files\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"

# Create file "/etc/pacman.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf '[options]\nDBPath              = /var/lib/pacman\nGPGDir              = /etc/pac' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'man.d/gnupg\nRootDir             = /\nHookDir             = /etc/pacman.d/hooks\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'LogFile             = /var/log/pacman.log\nHoldPkg             = pacman glibc\nC' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'acheDir            = /var/cache/pacman/pkg\nSigLevel            = Required Datab' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'aseOptional\nCleanMethod         = KeepInstalled\nArchitecture        = armv7h\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'ParallelDownloads   = 5\nLocalFileSigLevel   = Optional\n\nVerbosePkgLists\n\n[a' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'ur]\nInclude             = /etc/pacman.d/mirrorlist\n[core]\nInclude            ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf ' = /etc/pacman.d/mirrorlist\n[extra]\nInclude             = /etc/pacman.d/mirror' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'list\n[alarm]\nInclude             = /etc/pacman.d/mirrorlist\n[community]\nIncl' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'ude             = /etc/pacman.d/mirrorlist\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"

# Create file "/etc/vconsole.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/vconsole.conf"
/usr/bin/printf 'KEYMAP=us\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/vconsole.conf"

# Create file "/etc/sysless"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/sysless"
/usr/bin/printf '\x00\x4D\x2B\x47\x63\x00\x00\x65\x00\x00\x76\x34\x00\x4C\x45\x53\x53\x00\x81\x2D' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysless"
/usr/bin/printf '\x69\x20\x2D\x52\x00\x4C\x45\x53\x53\x48\x49\x53\x54\x53\x49\x5A\x45\x00\x81\x30' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysless"
/usr/bin/printf '\x00\x4C\x45\x53\x53\x48\x49\x53\x54\x46\x49\x4C\x45\x00\x81\x2F\x64\x65\x76\x2F' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysless"
/usr/bin/printf '\x6E\x75\x6C\x6C\x00\x78\x45\x6E\x64' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysless"

# Create file "/etc/conf.d/rngd"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/conf.d/rngd"
/usr/bin/printf 'RNGD_OPTS="-o /dev/random -r /dev/hwrng"\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/conf.d/rngd"

